/* ----------------------------------------------------------------------------------------------- */
/*  Copyright (c) 2014 - 2018 by Axel Kenzo, axelkenzo@mail.ru                                     */
/*                                                                                                 */
/*  Разрешается повторное распространение и использование как в виде исходного кода, так и         */
/*  в двоичной форме, с изменениями или без, при соблюдении следующих условий:                     */
/*                                                                                                 */
/*   1. При повторном распространении исходного кода должно оставаться указанное выше уведомление  */
/*      об авторском праве, этот список условий и последующий отказ от гарантий.                   */
/*   2. При повторном распространении двоичного кода должна сохраняться указанная выше информация  */
/*      об авторском праве, этот список условий и последующий отказ от гарантий в документации     */
/*      и/или в других материалах, поставляемых при распространении.                               */
/*   3. Ни имя владельца авторских прав, ни имена его соратников не могут быть использованы в      */
/*      качестве рекламы или средства продвижения продуктов, основанных на этом ПО без             */
/*      предварительного письменного разрешения.                                                   */
/*                                                                                                 */
/*  ЭТА ПРОГРАММА ПРЕДОСТАВЛЕНА ВЛАДЕЛЬЦАМИ АВТОРСКИХ ПРАВ И/ИЛИ ДРУГИМИ СТОРОНАМИ "КАК ОНА ЕСТЬ"  */
/*  БЕЗ КАКОГО-ЛИБО ВИДА ГАРАНТИЙ, ВЫРАЖЕННЫХ ЯВНО ИЛИ ПОДРАЗУМЕВАЕМЫХ, ВКЛЮЧАЯ, НО НЕ             */
/*  ОГРАНИЧИВАЯСЬ ИМИ, ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ КОММЕРЧЕСКОЙ ЦЕННОСТИ И ПРИГОДНОСТИ ДЛЯ КОНКРЕТНОЙ */
/*  ЦЕЛИ. НИ В КОЕМ СЛУЧАЕ НИ ОДИН ВЛАДЕЛЕЦ АВТОРСКИХ ПРАВ И НИ ОДНО ДРУГОЕ ЛИЦО, КОТОРОЕ МОЖЕТ    */
/*  ИЗМЕНЯТЬ И/ИЛИ ПОВТОРНО РАСПРОСТРАНЯТЬ ПРОГРАММУ, КАК БЫЛО СКАЗАНО ВЫШЕ, НЕ НЕСЁТ              */
/*  ОТВЕТСТВЕННОСТИ, ВКЛЮЧАЯ ЛЮБЫЕ ОБЩИЕ, СЛУЧАЙНЫЕ, СПЕЦИАЛЬНЫЕ ИЛИ ПОСЛЕДОВАВШИЕ УБЫТКИ,         */
/*  ВСЛЕДСТВИЕ ИСПОЛЬЗОВАНИЯ ИЛИ НЕВОЗМОЖНОСТИ ИСПОЛЬЗОВАНИЯ ПРОГРАММЫ (ВКЛЮЧАЯ, НО НЕ             */
/*  ОГРАНИЧИВАЯСЬ ПОТЕРЕЙ ДАННЫХ, ИЛИ ДАННЫМИ, СТАВШИМИ НЕПРАВИЛЬНЫМИ, ИЛИ ПОТЕРЯМИ ПРИНЕСЕННЫМИ   */
/*  ИЗ-ЗА ВАС ИЛИ ТРЕТЬИХ ЛИЦ, ИЛИ ОТКАЗОМ ПРОГРАММЫ РАБОТАТЬ СОВМЕСТНО С ДРУГИМИ ПРОГРАММАМИ),    */
/*  ДАЖЕ ЕСЛИ ТАКОЙ ВЛАДЕЛЕЦ ИЛИ ДРУГОЕ ЛИЦО БЫЛИ ИЗВЕЩЕНЫ О ВОЗМОЖНОСТИ ТАКИХ УБЫТКОВ.            */
/*                                                                                                 */
/*   ak_skey.h                                                                                     */
/* ----------------------------------------------------------------------------------------------- */
#ifndef __AK_SKEY_H__
#define __AK_SKEY_H__

/* ----------------------------------------------------------------------------------------------- */
 #include <ak_hash.h>
 #include <ak_buffer.h>

/* ----------------------------------------------------------------------------------------------- */
/* Предварительные описания ключевых структур */
 struct skey;

/* ----------------------------------------------------------------------------------------------- */
/*! \brief Указатель на структуру секретного ключа. */
 typedef struct skey *ak_skey;

/* ----------------------------------------------------------------------------------------------- */
/*! \brief Однопараметрическая функция для проведения действий с секретным ключом. */
 typedef int ( ak_function_skey )( ak_skey );
/*! \brief Однопараметрическая функция для проведения действий с секретным ключом. */
 typedef ak_bool ( ak_function_skey_check )( ak_skey );

/* ----------------------------------------------------------------------------------------------- */
/*! \brief Флаг установки ключевого значения: 0 - ключевое значение не определено, 1 - определено. */
 #define ak_skey_flag_set_key          (0x0001)
/*! \brief Флаг отмены очистки дополнительных данных: 0 - для указателя `data` вызывается free, 1 - очистка не производится. */
 #define ak_skey_flag_data_nonfree     (0x0002)

/*! \brief Флаг того, что внутреннее состояние синхропосылки установлено в истинное значение. */
 #define ak_flag_xcrypt_update         (0x1000)
/*! \brief Флаг того, что нельзя использовать update-функцию алгоритма CTR-ACPKM. */
 #define ak_flag_xcrypt_acpkm_update   (0x2000)
/*! \brief Флаг того, что нужно уменьшить ресурс ключа в update-функции алгоритма CTR-ACPKM. */
 #define ak_flag_xcrypt_acpkm_resource (0x4000)

/* ----------------------------------------------------------------------------------------------- */
/*! \brief Структура для хранения интервала времени использования ключа. */
 struct time_interval {
 /*! \brief время, до которого ключ недействителен */
  time_t not_before;
  /*! \brief время, после которого ключ недействителен */
  time_t not_after;
 };

/* ----------------------------------------------------------------------------------------------- */
/*! \brief Структура для хранения ресурса ключа. */
 union resource {
  /*! \brief счетчик числа использований, например, зашифрованных/расшифрованных блоков */
   ak_int64 counter;
  /*! \brief временной интервал использования ключа */
   struct time_interval time;
 };

/* ----------------------------------------------------------------------------------------------- */
/*! \brief Структура секретного ключа -- базовый набор данных и методов контроля. */
 struct skey {
  /*! \brief ключ */
   struct buffer key;
  /*! \brief маска ключа */
   struct buffer mask;
  /*! \brief контрольная сумма ключа */
   struct buffer icode;
  /*! \brief уникальный номер ключа */
   struct buffer number;
  /*! \brief генератор случайных масок ключа */
   struct random generator;
  /*! \brief ресурс использования ключа */
   union resource resource;
  /*! \brief указатель на внутренние данные ключа */
   ak_pointer data;
  /*! \brief OID алгоритма для которого предназначен секретный ключ */
   ak_oid oid;
 /*! \brief Флаги текущего состояния ключа */
   ak_uint64 flags;

  /*! \brief указатель на функцию маскирования ключа */
   ak_function_skey *set_mask;
  /*! \brief указатель на функцию изменения маски ключа (перемаскирования) */
   ak_function_skey *remask;
  /*! \brief указатель на функцию выработки контрольной суммы */
   ak_function_skey *set_icode;
  /*! \brief указатель на функцию проверки контрольной суммы */
   ak_function_skey_check *check_icode;
};

/* ----------------------------------------------------------------------------------------------- */
/*! \brief Инициализация структуры секретного ключа. */
 int ak_skey_create( ak_skey , size_t , size_t );
/*! \brief Очистка структуры секретного ключа. */
 int ak_skey_destroy( ak_skey );
/*! \brief Присвоение секретному ключу уникального номера. */
 int ak_skey_set_unique_number( ak_skey );
/*! \brief Присвоение секретному ключу константного значения. */
 int ak_skey_set_ptr( ak_skey , const ak_pointer , const size_t , const ak_bool );
/*! \brief Присвоение секретному ключу случайного значения. */
 int ak_skey_set_random( ak_skey , ak_random );
/*! \brief Присвоение секретному ключу значения, выработанного из пароля */
 int ak_skey_set_password( ak_skey , const ak_pointer , const size_t ,
                                                                 const ak_pointer , const size_t );
/* ----------------------------------------------------------------------------------------------- */
/*! \brief Проверка параметров контекста секретного ключа. */
 int ak_skey_check( ak_skey );
/*! \brief Наложение в пространстве векторов \f$ \mathbb V^n \f$ аддитивной маски на ключ. */
 int ak_skey_set_mask_xor( ak_skey );
/*! \brief Смена в пространстве векторов \f$ \mathbb V^n \f$ значения аддитивной маски ключа. */
 int ak_skey_remask_xor( ak_skey );
/*! \brief Вычисление значения контрольной суммы ключа. */
 int ak_skey_set_icode_xor( ak_skey );
/*! \brief Проверка значения контрольной суммы ключа. */
 ak_bool ak_skey_check_icode_xor( ak_skey );

#endif
/* ----------------------------------------------------------------------------------------------- */
/*                                                                                      ak_skey.h  */
/* ----------------------------------------------------------------------------------------------- */
